defaults: &defaults
  docker:
    - image: circleci/node
  working_directory: ~/circleci-hello-world

# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
commands:
  print_pipeline_id:
    description: "Command that prints pipeline ID"
    steps:
      - run: echo $CIRCLE_WORKFLOW_ID
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    working_directory: ~/circleci-hello-world
    steps:
      - checkout
      - run:
          name: Create AWS Infrastructure
          command: >
            aws cloudformation create-stack
            --stack-name "TestCircleCI"
            --template-body file://cloudformation/template.yml
            --region $AWS_DEFAULT_REGION
  generate_inventory_file:
    docker:
      - image: amazon/aws-cli
    working_directory: ~/circleci-hello-world
    steps:
      - run:
          command: |
            aws cloudformation wait stack-create-complete --stack-name TestCircleCI
      - run:
          name: Create inventory file
          command: >
            echo "[all]" > ~/inventory.txt &&
            aws ec2 describe-instances
            --query 'Reservations[*].Instances[*].PublicDnsName'
            --output text >> ~/inventory.txt
      - run:
          name: Install tar and gzip
          command: yum install -y tar && yum install -y gzip
      - persist_to_workspace:
          root: ~/
          paths:
            - inventory.txt
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    working_directory: ~/circleci-hello-world
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/inventory.txt
      - checkout
      - run:
          name: Install Ansible
          command: apk add ansible && ansible-galaxy collection install community.general
      - add_ssh_keys:
          fingerprints:
            - "a9:34:93:69:43:66:13:1a:b1:ea:82:9d:92:37:58:bf"
      - run:
          name: Run ansible playbook
          command: ansible-playbook -i ~/inventory.txt .ansible/main-remote.yml
  smoke_test:
    docker:
      - image: amazon/aws-cli
    working_directory: ~/circleci-hello-world
    steps:
      - run:
          name: "Test availability"
          command: |
            if curl -s --head $(aws cloudformation describe-stacks --stack-name TestCircleCI --query "Stacks[0].Outputs[0].OutputValue"  --output text)
            then
              echo "It worked!"
            else
              echo "It failed"
            fi
# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - create_infrastructure
      - generate_inventory_file:
          requires:
              - create_infrastructure
      - configure_infrastructure:
          requires:
            - generate_inventory_file
      - smoke_test:
          requires:
            - configure_infrastructure
